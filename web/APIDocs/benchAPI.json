{
    "swagger": "2.0",
    "info": {
        "description": "Access to ELXIR benchmarking data store",
        "version": "1.0.1",
        "title": "IECHOR Benchmarking platform. Data Store API"
    },
    "host": "iechor.bsc.es",
    "basePath": "/benchmarking",
    "schemes": ["https"],
    "produces": ["application/json", "text/html", "text/xml"],
    "paths": {
        "/Community": {
            "get": {
                "tags": ["Community"],
                "summary": "Benchmarking Communities",
                "description": "Information about Benchmarking communitites affiliated at the platform",
                "produces": ["text/plain"],
                "parameters": [
                    {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Communities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Community"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Community.{fmt}": {
            "get": {
                "tags": ["Community"],
                "summary": "Benchmarking Communities",
                "description": "Information about Benchmarking communitites affiliated at the platform",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [
                    {
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of Communities",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Community"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Community/{id}": {
            "get": {
                "tags": ["Community"],
                "summary": "A benchmarking Community",
                "description": "Info about a given benchmarking community",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the community",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a Community object",
                        "schema": {
                            "$ref": "#/definitions/Community"
                        }
                    },
                    "404": {
                        "description": "Community Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error404"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Community/{id}.{fmt}": {
            "get": {
                "tags": ["Community"],
                "summary": "A benchmarking Community",
                "description": "Info about a given benchmarking community",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the community",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a Community object",
                        "schema": {
                            "$ref": "#/definitions/Community"
                        }
                    },
                    "404": {
                        "description": "Community Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error404"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/CommunityStatus.{fmt}": {
            "get": {
                "tags": ["Community"],
                "summary": "Possible Status for Benchmarking Communities",
                "description": "Possible values for Benchmarking communitites statuses",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [
                    {
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of Communities Status",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommunityStatus"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/CommunityStatus/{id}.{fmt}": {
            "get": {
                "tags": ["Community"],
                "summary": "Possible Status for Benchmarking Communities",
                "description": "Possible values for Benchmarking communitites statuses",
                "produces": ["application/json", "text/xml", "text/html"],
                "parameters": [{
                        "$ref": "#/parameters/fmt"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Description of a Community Status",
                        "schema": {
                            "$ref": "#/definitions/CommunityStatus"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/BenchmarkingEvent.{fmt}": {
            "get": {
                "tags": ["Events"],
                "summary": "Benchmarking Events",
                "description": "Information about Benchmarking Events organized by Communitites affiliated at the platform",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of Benchmarking Events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommunityStatus"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/BenchmarkingEvent/{id}.{fmt}": {
            "get": {
                "tags": ["Community"],
                "summary": "A benchmarking Event",
                "description": "Info about a given benchmarking Event",
                "parameters": [{
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the Benchmarking Event",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a Benchmarking Event object",
                        "schema": {
                            "$ref": "#/definitions/BenchmarkingEvent"
                        }
                    },
                    "404": {
                        "description": "Event Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Contact.{fmt}": {
            "get": {
                "tags": ["Contacts"],
                "summary": "Contact persons",
                "description": "Information about Contact personso from the Communities affiliated at the platform",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of Benchmarking Events",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Contact/{id}.{fmt}": {
            "get": {
                "tags": ["Contacts"],
                "summary": "Contact Data",
                "description": "Info about a Contact",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the Contact (givenname.surname)",
                        "required": true,
                        "type": "string"
                    }, {
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a Contact object",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    },
                    "404": {
                        "description": "Contact Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Dataset.{fmt}": {
            "get": {
                "tags": ["Datasets"],
                "summary": "Datasets involved in Benchmarking",
                "description": "Information about Datasets used in benchmarking",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of Datasets",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Dataset"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Dataset/{id}.{fmt}": {
            "get": {
                "tags": ["Datasets"],
                "summary": "Dataset Data",
                "description": "Info about a Dataset",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the Dataset",
                        "required": true,
                        "type": "string"
                    }, {
                        "$ref": "#/parameters/fmt"
                    },
                    {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a Dataset object",
                        "schema": {
                            "$ref": "#/definitions/Dataset"
                        }
                    },
                    "404": {
                        "description": "Dataset Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Metrics.{fmt}": {
            "get": {
                "tags": ["Metrics", "Datasets"],
                "summary": "Metrics used in benchmarking",
                "description": "Information about Metrics used by the Communities affiliated at the platform",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of Metrics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metrics"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Metrics/{id}.{fmt}": {
            "get": {
                "tags": ["Metrics", "Datasets"],
                "summary": "Metrics Data",
                "description": "Info about a Metrics",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the Metric",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a Metrics object",
                        "schema": {
                            "$ref": "#/definitions/Metrics"
                        }
                    },
                    "404": {
                        "description": "Metrics Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reference.{fmt}": {
            "get": {
                "tags": ["References"],
                "summary": "References",
                "description": "Information about published references",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of References",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reference"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Reference/{id}.{fmt}": {
            "get": {
                "tags": ["References"],
                "summary": "Reference Data",
                "description": "Info about a Reference",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the Reference (DOI)",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a Reference object",
                        "schema": {
                            "$ref": "#/definitions/Reference"
                        }
                    },
                    "404": {
                        "description": "Reference Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/TestEvent.{fmt}": {
            "get": {
                "tags": ["Events"],
                "summary": "Test Events (input + agent -> output)",
                "description": "Information about Performed tests",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of TestEvents",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TestEvent"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/TestEvent/{id}.{fmt}": {
            "get": {
                "tags": ["Events"],
                "summary": "Test Event Data",
                "description": "Info about a Test Event",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the TestEvent",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a TestEvent object",
                        "schema": {
                            "$ref": "#/definitions/TestEvent"
                        }
                    },
                    "404": {
                        "description": "TestEvent Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error404"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Agent.{fmt}": {
            "get": {
                "tags": ["Agents"],
                "summary": "Agents",
                "description": "Information about Agents",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of Agents",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Agent"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/Agent/{id}.{fmt}": {
            "get": {
                "tags": ["Agents"],
                "summary": "Agent Data",
                "description": "Info about a Agent",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the Agent",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a Agent object",
                        "schema": {
                            "$ref": "#/definitions/Agent"
                        }
                    },
                    "404": {
                        "description": "Agent Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/AgentStatus.{fmt}": {
            "get": {
                "tags": ["Agents"],
                "summary": "Agent Statuses",
                "description": "Information about Agents Status",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of Agents Statuses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AgentStatus"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/AgentStatus/{id}.{fmt}": {
            "get": {
                "tags": ["Agents"],
                "summary": "AgentStatus Data",
                "description": "Info about a Agent Status",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the AgentStatus",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a AgentStatus object",
                        "schema": {
                            "$ref": "#/definitions/AgentStatus"
                        }
                    },
                    "404": {
                        "description": "AgentStatus Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/AgentAccessType.{fmt}": {
            "get": {
                "tags": ["Agents"],
                "summary": "Agent AccessTypes",
                "description": "Information about Agent AccessTypes",
                "produces": ["application/json", "text/xml", "text/html", "text/plain"],
                "parameters": [{
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "query",
                        "in": "query",
                        "description": "Text Search query",
                        "required": false,
                        "type": "string"
                    }],
                "responses": {
                    "200": {
                        "description": "An array of Agents AccessTypes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AgentAccessType"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/AgentAccessType/{id}.{fmt}": {
            "get": {
                "tags": ["Agents"],
                "summary": "AgentAccessType Data",
                "description": "Info about a Agent AccessType",
                "parameters": [{
                        "name": "id",
                        "in": "path",
                        "description": "Unique Id of the AgentAccessType",
                        "required": true,
                        "type": "string"
                    }, {
                        "name": "fmtQuery",
                        "in": "query",
                        "description": "Output format (tab, json, xml, html)",
                        "required": false,
                        "type": "string"
                    }, {
                        "name": "extended",
                        "in": "query",
                        "description": "Provide extended information by denormalizing internal ids",
                        "required": false,
                        "type": "boolean"
                    }],
                "responses": {
                    "200": {
                        "description": "a AgentStatus object",
                        "schema": {
                            "$ref": "#/definitions/AgentAccessType"
                        }
                    },
                    "404": {
                        "description": "AgentAccessType Id not found Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Community": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/community.json"
        },
        "BenchmarkingEvent": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/benchmarkingEvent.json"
        },
        "Contact": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/contact.json"
        },
        "Dataset": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/dataset.json"
        },
        "CommunityStatus": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/communityStatus.json"
        },
        "Metrics": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/metrics.json"
        },
        "Reference": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/reference.json"
        },
        "TestEvent": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/testEvent.json"
        },
        "AgentAccessType": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/agentAccessType.json"
        },
        "Agent:": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/agent.json"
        },
        "AgentStatus": {
            "$ref": "https://iechor.bsc.es/benchmarking/APIDocs/json-schemas/agentStatus.json"
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Error404": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "default": 404
                },
                "message": {
                    "type": "string",
                    "default": "Id not found"
                }
            }
        }
    },
    "parameters": {
        "fmt": {
            "name": "fmt",
            "in": "path",
            "description": "Output format (tab, json, xml, html)",
            "required": true,
            "type": "string",
            "default": "json"
        },
        "fmtQuery": {
            "name": "fmtQuery",
            "in": "query",
            "description": "Output format (tab, json, xml, html)",
            "required": false,
            "type": "string"
        },
        "textQuery": {
            "name": "query",
            "in": "query",
            "description": "Text Search query",
            "required": false,
            "type": "string"
        },
        "extendedInfo": {
            "name": "extended",
            "in": "query",
            "description": "Provide extended information by denormalizing internal ids",
            "required": false,
            "type": "boolean"
        }
    },
    "responses": {
        "default": {
            "description": "Unexpected error",
            "schema": {
                "$ref": "#/definitions/Error"
            }
        }
    }
}